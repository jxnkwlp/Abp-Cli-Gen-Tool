using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using Volo.Abp.Domain.Repositories;

namespace {{type.namespace}};

public interface I{{type.name}}Repository : I{{readonly_repo?"ReadOnly":""}}Repository<{{type.name}}, {{type.key}}>
{
    // Task<bool> IsNameExistsAsync(string name, {{type.key}}[] excludeIds = null, CancellationToken cancellationToken = default);
    // Task<{{type.name}}> GetByNameAsync(string name, CancellationToken cancellationToken = default);
    // Task<{{type.name}}?> FindByNameAsync(string name, CancellationToken cancellationToken = default);

    Task<long> GetCountAsync(string? filter = null, CancellationToken cancellationToken = default);
    Task<List<{{type.name}}>> GetListAsync(string? filter = null, bool includeDetails = false, CancellationToken cancellationToken = default);
    Task<List<{{type.name}}>> GetPagedListAsync(int skipCount, int maxResultCount, string? filter = null, string? sorting = null, bool includeDetails = false, CancellationToken cancellationToken = default);
}
